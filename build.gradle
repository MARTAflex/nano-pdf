plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.9.20'
    //id 'com.bmuschko.docker-java-application' version '3.0.6'
}

repositories {
    //jcenter() EOS 01.02.2022
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    // kotlin stdlib to get kotlin to do anything
    implementation('org.jetbrains.kotlin:kotlin-stdlib:1.9.20')

    // spark rest framework
    implementation('com.sparkjava:spark-core:2.9.4')
    // needed in spark 2.5 to get rid of
    // > Failed to load class "org.slf4j.impl.StaticLoggerBinder".
    // error message and enable logging
    implementation('org.slf4j:slf4j-simple:1.7.25')
    implementation('ch.qos.logback:logback-classic:1.2.3')

    // convenient json library
    implementation('com.fasterxml.jackson.core:jackson-core:2.16.1')
    implementation('com.fasterxml.jackson.core:jackson-databind:2.16.1')

    // pdf library that supports form flattening/better licensing
    implementation('org.apache.pdfbox:pdfbox:3.0.1')

    // Test Dependencies
    // unit testing framework that sucks balls (FIXME: any other options?)
    testImplementation('junit:junit:4.13.2')
    // convenient request library
    testImplementation('com.mashape.unirest:unirest-java:1.4.8')
}

version = "0.1.2"

sourceSets {
    main.kotlin.srcDirs += 'src/main/'
    test.kotlin.srcDirs += 'src/test/'
    test.resources.srcDirs += 'resources/test/'
}

test {
    testLogging {
        showStandardStreams = true
    }
}

jar {
    archiveFileName = 'nano-pdf'
    archiveVersion = version
    mainClassName = 'MainKt'
    manifest {
        attributes  'Implementation-Title': 'Nano-PDF Microservice',
                    'Implementation-Version': version,
                    'Main-Class': mainClassName
    }
}

/*docker {
    javaApplication {
        baseImage = 'openjdk/8-jre-alpine'
        maintainer = 'Jan Schwalbe "jan.schwalbe@martaflex.de"'
        ports = [9091]
        tag = 'martaflex/nanopdf:0.0.1'
    }
}*/
